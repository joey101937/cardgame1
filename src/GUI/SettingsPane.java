/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Cards.Card;
import Minions.Minion;
import cardgame1.Hero;
import cardgame1.Main;

/**
 *
 * @author Joseph
 */
public class SettingsPane extends javax.swing.JFrame {

    /**
     * Creates new form Settingspane
     */
    public SettingsPane() {
        initComponents();
        System.out.println("setting location to " + LandingPage.metaX + " " + LandingPage.metaY);
        this.setLocation(LandingPage.metaX, LandingPage.metaY);
        this.aiSpeedField.setText(String.valueOf(AI.AI.speed));
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        aiSPeedLabel = new javax.swing.JLabel();
        aiSpeedField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        showValueButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        gameOverLabel = new javax.swing.JLabel();
        disableButton = new javax.swing.JRadioButton();
        fpsLabel = new javax.swing.JLabel();
        fpsButton = new javax.swing.JRadioButton();
        costLabel = new javax.swing.JLabel();
        costButton = new javax.swing.JRadioButton();
        timeoutLabel = new javax.swing.JLabel();
        timeoutButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleLabel.setText("SETTINGS");

        aiSPeedLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        aiSPeedLabel.setText("Effect Duration");
        aiSPeedLabel.setToolTipText("Determines length of pauses between AI moves and How long visual effects and card previews last\nincrease if you find reading cards in time too difficult");

        aiSpeedField.setText("800");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        showValueButton.setText("Show Value");
        showValueButton.setToolTipText("Displays how valuable a card is to the AI, mainly for debugging. May Hurt Performance");
        showValueButton.setAutoscrolls(true);
        showValueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showValueButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Display AI-Assessed Value on cards");
        jLabel1.setToolTipText("Displays how valuable a card is to the AI, mainly for debugging.");

        gameOverLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gameOverLabel.setText("Disable Game Over On Death");
        gameOverLabel.setToolTipText("If disabled, game continues after a hero dies. putting the hero into negative HP");

        disableButton.setText("Disabled");
        disableButton.setToolTipText("");
        disableButton.setAutoscrolls(true);
        disableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableButtonActionPerformed(evt);
            }
        });

        fpsLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fpsLabel.setText("Enable FPS on console");
        fpsLabel.setToolTipText("When run from console, prints fps every second");

        fpsButton.setText("Enabled");
        fpsButton.setToolTipText("");
        fpsButton.setAutoscrolls(true);
        fpsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpsButtonActionPerformed(evt);
            }
        });

        costLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        costLabel.setText("Show Card Cost in DeckBuilder");
        costLabel.setToolTipText("Cost will be show next to the card name in list of cards");

        costButton.setText("Enabled");
        costButton.setToolTipText("");
        costButton.setAutoscrolls(true);
        costButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costButtonActionPerformed(evt);
            }
        });

        timeoutLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timeoutLabel.setText("Remove Server Timeout");
        timeoutLabel.setToolTipText("If removed, starting a multiplayer game as server will not end based on timeout");

        timeoutButton.setText("Remove");
        timeoutButton.setToolTipText("");
        timeoutButton.setAutoscrolls(true);
        timeoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aiSPeedLabel)
                            .addComponent(jLabel1)
                            .addComponent(gameOverLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titleLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jButton1)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fpsLabel)
                                    .addGap(24, 24, 24)))
                            .addComponent(timeoutLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fpsButton)
                    .addComponent(showValueButton)
                    .addComponent(aiSpeedField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disableButton)
                    .addComponent(costButton)
                    .addComponent(timeoutButton))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aiSPeedLabel)
                    .addComponent(aiSpeedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showValueButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameOverLabel)
                    .addComponent(disableButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fpsLabel)
                    .addComponent(fpsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costLabel)
                    .addComponent(costButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeoutLabel)
                    .addComponent(timeoutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
           int newSpeed = Integer.parseInt(this.aiSpeedField.getText());
           AI.AI.speed = newSpeed;
       }catch(NumberFormatException nfe){
           Main.display("invalid number for AI speed");
           return;
       }
       Card.showValue = showValueButton.isSelected();
       Minion.showValue = showValueButton.isSelected();
       Hero.endGameOnDeath = !this.disableButton.isSelected();
       Main.showFPS = this.fpsButton.isSelected();
       Main.showCostInBuilder = this.costButton.isSelected();
       Main.removeServerTimeout = this.timeoutButton.isSelected();
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showValueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showValueButtonActionPerformed

    }//GEN-LAST:event_showValueButtonActionPerformed

    private void disableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disableButtonActionPerformed

    private void fpsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fpsButtonActionPerformed

    private void costButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costButtonActionPerformed

    private void timeoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeoutButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeoutButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aiSPeedLabel;
    private javax.swing.JTextField aiSpeedField;
    private javax.swing.JRadioButton costButton;
    private javax.swing.JLabel costLabel;
    private javax.swing.JRadioButton disableButton;
    private javax.swing.JRadioButton fpsButton;
    private javax.swing.JLabel fpsLabel;
    private javax.swing.JLabel gameOverLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton showValueButton;
    private javax.swing.JRadioButton timeoutButton;
    private javax.swing.JLabel timeoutLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
